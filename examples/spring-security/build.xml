<?xml version="1.0" encoding="UTF-8"?>
<project name="jbehave-spring-security" default="install">

  <!-- =================== -->
  <!-- Ant initialization  -->
  <!-- =================== -->

  <property file="${basedir}/build.properties" />
  <property name="lib.dir" value="${user.home}/.m2/repository/" />

  <!-- ======= -->
  <!--  Paths  -->
  <!-- ======= -->

  <path id="classpath.compile">
    <fileset dir="${lib.dir}">
      <include name="javax/persistence/persistence-api/1.0/persistence-api-1.0.jar" />
      <include name="commons-lang/commons-lang/2.5/commons-lang-2.5.jar" />
      <include name="org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.jar" />
      <include name="org/springframework/spring/2.5.6.SEC02/spring-2.5.6.SEC02.jar" />
      <include name="org/springframework/security/spring-security-core/2.0.5.RELEASE/spring-security-core-2.0.5.RELEASE.jar" />
    </fileset>
  </path>

  <path id="classpath.runtime">
    <fileset dir="${lib.dir}">
      <include name="antlr/antlr/2.7.6/antlr-2.7.6.jar" />
      <include name="asm/asm/1.5.3/asm-1.5.3.jar" />
      <include name="asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar" />
      <include name="cglib/cglib/2.1_3/cglib-2.1_3.jar" />
      <include name="commons-codec/commons-codec/1.3/commons-codec-1.3.jar" />
      <include name="commons-collections/commons-collections/3.2/commons-collections-3.2.jar" />
      <include name="commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar" />
      <include name="commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar" />
      <include name="commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar" />
      <include name="dom4j/dom4j/1.6.1/dom4j-1.6.1.jar" />
      <include name="org/hibernate/hibernate-annotations/3.2.1.ga/hibernate-annotations-3.2.1.ga.jar" />
      <include name="org/hsqldb/hsqldb/2.0.0/hsqldb-2.0.0.jar" />
      <include name="geronimo-spec/geronimo-spec-jta/1.0-M1/geronimo-spec-jta-1.0-M1.jar" />
      <include name="org/slf4j/slf4j-api/1.5.6/slf4j-api-1.5.6.jar" />
      <include name="org/slf4j/slf4j-simple/1.5.6/slf4j-simple-1.5.6.jar" />
    </fileset>
  </path>

  <path id="classpath.test">
    <pathelement location="target/classes" />
    <fileset dir="${lib.dir}">
      <include name="commons-io/commons-io/1.4/commons-io-1.4.jar" />
      <include name="org/dbunit/dbunit/2.4.7/dbunit-2.4.7.jar" />
      <include name="org/freemarker/freemarker/2.3.16/freemarker-2.3.16.jar" />
      <include name="org/jbehave/jbehave-core/${jbehave.version}/jbehave-core-${jbehave.version}.jar" />
      <include name="org/jbehave/jbehave-spring/${jbehave.version}/jbehave-spring-${jbehave.version}.jar" />
      <include name="junit/junit/4.4/junit-4.4.jar" />
      <include name="org/springframework/spring-test/2.5.6/spring-test-2.5.6.jar" />
    </fileset>
  </path>

  <path id="classpath.provided">
  </path>

  <!-- ======= -->
  <!--  Clean  -->
  <!-- ======= -->

  <target name="clean" description="Clean the output directory">
    <delete includeemptydirs="true" failonerror="true" verbose="true">
      <fileset dir="target" includes="**/*" excludes="ide/**/*" />
    </delete>
  </target>

  <!-- ======= -->
  <!--  Build  -->
  <!-- ======= -->

  <target name="initialize" description="Initialize the build process">
    <tstamp />
  </target>

  <target name="process-resources" depends="initialize" description="Process resources">
    <mkdir dir="target/classes" />
    <copy todir="target/classes" includeemptydirs="false">
      <fileset dir="src/main/resources" />
      <fileset dir="src/main/java">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="process-resources" description="Compile the code">
    <javac destdir="target/classes" includeantruntime="false" deprecation="${javac.deprecation}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.source}" target="${javac.target}">
      <compilerarg value="-Xlint:unchecked" />
      <src path="src/main/java" />
      <classpath refid="classpath.compile" />
      <classpath refid="classpath.provided" />
    </javac>
  </target>

  <target name="process-test-resources" depends="compile" description="Process test resources">
    <mkdir dir="target/test-classes" />
    <copy todir="target/test-classes">
      <fileset dir="src/test/resources" />
      <fileset dir="src/test/java">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="test-compile" depends="process-test-resources" description="Compile the test code">
    <javac destdir="target/test-classes" includeantruntime="false" deprecation="${javac.deprecation}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.source}" target="${javac.target}">
      <compilerarg value="-Xlint:unchecked" />
      <src path="src/test/java" />
      <classpath refid="classpath.test" />
      <classpath refid="classpath.compile" />
      <classpath refid="classpath.provided" />
    </javac>
  </target>

  <target name="test" depends="test-compile" description="Run the tests">
    <mkdir dir="target/junit" />
    <junit fork="true" forkmode="perBatch" printsummary="true" haltonfailure="false" errorProperty="test.failed" failureProperty="test.failed">
      <jvmarg value="-Xms128M" />
      <jvmarg value="-Xmx512M" />
      <classpath location="target/test-classes" />
      <classpath refid="classpath.test" />
      <classpath refid="classpath.compile" />
      <classpath refid="classpath.runtime" />
      <classpath refid="classpath.provided" />
      <formatter type="brief" usefile="false" />
      <formatter type="xml" usefile="true" />
      <batchtest todir="target/junit">
        <fileset dir="target/test-classes">
          <include name="**/*Test.class" />
          <exclude name="**/*IntegrationTest.class" />
          <exclude name="**/Abstract*.class" />
        </fileset>
      </batchtest>
    </junit>
    <fail message="Tests failed - results are at target/junit" if="test.failed" />
  </target>

  <target name="package" depends="test" description="Package the application">
    <!-- jar if needed -->
  </target>

  <target name="integration-test" depends="package" description="Run the integration tests">
    <mkdir dir="target/junit" />
    <junit fork="true" forkmode="perBatch" printsummary="true" haltonfailure="false" errorProperty="test.failed" failureProperty="test.failed">
      <jvmarg value="-Xms128M" />
      <jvmarg value="-Xmx512M" />
      <classpath location="target/test-classes" />
      <classpath refid="classpath.test" />
      <classpath refid="classpath.compile" />
      <classpath refid="classpath.runtime" />
      <classpath refid="classpath.provided" />
      <formatter type="brief" usefile="false" />
      <formatter type="xml" usefile="true" />
      <batchtest todir="target/junit">
        <fileset dir="target/test-classes">
          <include name="**/*IntegrationTest.class" />
          <exclude name="**/Abstract*.class" />
        </fileset>
      </batchtest>
    </junit>
    <fail message="Tests failed - results are at target/junit" if="test.failed" />
    <copy todir="target/jbehave-reports/view">
      <fileset dir="src/test/resources/view" />
    </copy>
  </target>

  <target name="install" depends="integration-test" description="Locally share the application">
    <!-- copy back to lib.dir if needed -->
  </target>

  <!-- ====== -->
  <!--  Site  -->
  <!-- ====== -->

  <target name="site" depends="install" description="Create the project website">
    <delete dir="target/site" failonerror="false" />
    <mkdir dir="target/site" />
    <antcall target="-site-javadoc" inheritAll="true" inheritRefs="true" />
    <antcall target="-site-junit" inheritAll="true" inheritRefs="true" />
  </target>

  <target name="-site-javadoc">
    <mkdir dir="target/site/javadoc" />
    <javadoc destdir="target/site/javadoc" version="true" author="true" sourcepath="src/main/java" source="1.6" includenosourcepackages="true">
      <classpath refid="classpath.compile" />
      <classpath refid="classpath.runtime" />
      <classpath refid="classpath.provided" />
    </javadoc>
  </target>

  <target name="-site-junit">
    <mkdir dir="target/site/junit" />
    <junitreport todir="target/junit">
      <fileset dir="target/junit">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="target/site/junit" />
    </junitreport>
  </target>

</project>
